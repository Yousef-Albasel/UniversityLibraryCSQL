<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sW6NcRWv3zyioqb2qcKhPv5WN3zoMTaOYajl5nf+G6PO11h+X9FV/+5irF/jcvtbOWt0zW+PP26IMc5R
        /Q2O50QXwMUkugBmToTTsxA5jX4TjE3BVhPhPjGuUVHSo2vXKy/di4quftwjXvpt1Gtflj6617e5brJf
        61WAzANsvDf7iq4a28y/F9bPd/3dbNPXr+1WVPXfl87Buqtpfb83RdcuMdi3IboA9k90Acz08DntJLRP
        hCsUtqnX7uvUxL0m8+P308bPi4iumtSP9WqMSf44jvp33Xeldomubr6tWmef0bXtuOc3qKjlj38/isBN
        Tiz/bP1+05B1fy9nia7+Hw52+Ts47fsAwOmILoAFfRJaV3F20T8mVhPiXfVJdf3cf99lIt897+iq5Xok
        juOuift4bNPd884y2e8fSazt7zO6tr3Xfdu1rdPe+a9fEaz1N328cujvab+atim65lfkNu1XPTeWrbHt
        GAA4PdEFsKBf0ahRQbVJ3QzjxPLPJspDTa43TWT7RLwm1fOJ/LZtd88rulax0/a7RkXAOM4+ka9jWfL+
        705etRrfA6vj3XS+emzUOvuMrhrrzve6qO7nvO7IuG7fl9afB+RcvVbfv/6R1f740rr9vKzbr/nr11i3
        /wCcnegCWGMpKupW3jWxr0lu/VsT6R4rNWqC242PkNVyFVW1bo36H9bOtzEmvPO7HY5t1zpj3dp+PVZR
        Mybd+4quioH6fT7mt3kfo/ZvPlnvQdFDqr7H1L/vNcb4f3KN169zM851jfq59mEsX9ss+46uGnUDkHGu
        59ut0f9nwxXJ/TXq5/4+b1p/XbDVxzHrnM3Pdb320n7XduZquXX7Vdtfev0a4/UB2B/RBbDB5XbnuF1G
        fZRu/v2l+YR73ehXx8q628wvjfGxs31F166jJu21zaXvbNXkfmmdMSoCKkiWnttljHDZZ3T187duzN+n
        Mg+cTWO8V2UebEujlp/HUT3W11uKrrLLftXz9Xc7fhddAPsnugC2WF2paJPSpXHpW7fXTvhrElthsHRV
        oUY93ifi3bZ1f/yXt05Ez/OIrtpm3Umw9nndDTKG+pjm0qS/9m1pn+s4a511t4qvUe9Fj4x9RVddmSv1
        Gkv7PN/uXAVUHcvSumP9uso3V/ux9PfVt1f/9tdd+n2d8Tc0lh2jzvX42+nvwTgvAOyP6ALYUU1Ga3Jb
        k/KapNa/NU4zSa1J93iN+vd5rfui1f5WTNW/S6E2zm2NoZYbj72IYx7nu/b7tNvt71X9vC1OyzgHm7Y3
        nj+LcT5r/V33CYD9EF0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJ
        LgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAA
        gkQXAABAkOgCAAAIEl0AAABBogsAACBIdAEAAASJLgAAgCDRBQAAECS6AAAAgkQXAABAkOgCAAAIEl0A
        AABBogsAACBIdAEAAASJLgAAgJhp+j8ewu+AjcgCGgAAAABJRU5ErkJggg==
</value>
  </data>
</root>